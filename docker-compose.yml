version: "3.2"
services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - cleanarch

  api:
    build: .
    ports:
      - "8080:3333"
    environment:
      DB_TYPE: mongo
      MONGO_URI: mongodb://mongo:27017/caseitau
    links:
      - mongo
    networks:
      - cleanarch
    depends_on:
      - mongo


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - cleanarch
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node

  logstash:
    image: docker.elastic.co/logstash/logstash:7.5.1
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - cleanarch

    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.1
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - cleanarch

  logspout:
    image: bekt/logspout-logstash
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      ROUTE_URIS: logstash+tcp://logstash:5000

    networks:
      - cleanarch

networks:
  cleanarch:
    driver: bridge

volumes:
  elasticsearch: